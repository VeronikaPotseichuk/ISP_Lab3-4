[
{
  "model": "courses.subject",
  "pk": 1,
  "fields": {
    "title": "Экология",
    "slug": "ekologiya"
  }
},
{
  "model": "courses.subject",
  "pk": 2,
  "fields": {
    "title": "Философия",
    "slug": "filosofiya"
  }
},
{
  "model": "courses.subject",
  "pk": 3,
  "fields": {
    "title": "Психология",
    "slug": "psihologiya"
  }
},
{
  "model": "courses.subject",
  "pk": 4,
  "fields": {
    "title": "Программирование",
    "slug": "programmirovanie"
  }
},
{
  "model": "courses.subject",
  "pk": 5,
  "fields": {
    "title": "Хореография",
    "slug": "horeografia"
  }
},
{
  "model": "courses.subject",
  "pk": 6,
  "fields": {
    "title": "Искусство",
    "slug": "iskusstvo"
  }
},
{
  "model": "courses.subject",
  "pk": 7,
  "fields": {
    "title": "Кулинария",
    "slug": "kulinaria"
  }
},
{
  "model": "courses.course",
  "pk": 1,
  "fields": {
    "owner": 2,
    "subject": 6,
    "title": "Экология родного края",
    "slug": "zivopis",
    "overview": "Данный курс предназначен для юных ботаников и просто любителей природы.",
    "created": "2022-05-23T15:24:37.319Z",
    "thumbnail": "",
    "users": [
      3
    ]
  }
},
{
  "model": "courses.course",
  "pk": 2,
  "fields": {
    "owner": 2,
    "subject": 4,
    "title": "Курсы по программированию",
    "slug": "kursy-po-programmirovaniyu",
    "overview": "Курсы по программированию",
    "created": "2022-05-23T15:27:37.401Z",
    "thumbnail": "",
    "users": [
      3
    ]
  }
},
{
  "model": "courses.course",
  "pk": 3,
  "fields": {
    "owner": 1,
    "subject": 4,
    "title": "Python3 за 10 часов",
    "slug": "python3-za-10-chasov",
    "overview": "Этот курс полезен как новичкам, так и более опытным пользователям.",
    "created": "2022-05-23T18:32:31.787Z",
    "thumbnail": "",
    "users": [
      3
    ]
  }
},
{
  "model": "courses.module",
  "pk": 1,
  "fields": {
    "course": 3,
    "title": "Введение",
    "description": "",
    "order": 1
  }
},
{
  "model": "courses.module",
  "pk": 2,
  "fields": {
    "course": 3,
    "title": "Типы данных",
    "description": "",
    "order": 2
  }
},
{
  "model": "courses.module",
  "pk": 3,
  "fields": {
    "course": 3,
    "title": "Функции и их аргументы",
    "description": "",
    "order": 3
  }
},
{
  "model": "courses.content",
  "pk": 1,
  "fields": {
    "module": 4,
    "content_type": 11,
    "object_id": 1,
    "order": 1
  }
},
{
  "model": "courses.content",
  "pk": 2,
  "fields": {
    "module": 4,
    "content_type": 11,
    "object_id": 1,
    "order": 2
  }
},
{
  "model": "courses.content",
  "pk": 3,
  "fields": {
    "module": 4,
    "content_type": 11,
    "object_id": 2,
    "order": 3
  }
},
{
  "model": "courses.text",
  "pk": 1,
  "fields": {
    "owner": 3,
    "title": "Python",
    "created": "2022-05-23T22:28:12.043Z",
    "updated": "2022-05-23T22:28:12.043Z",
    "content": "Python — высокоуровневый язык программирования общего назначения с динамической строгой типизацией и автоматическим управлением памятью, ориентированный на повышение производительности разработчика, читаемости кода и его качества, а также на обеспечение переносимости написанных на нём программ. \n Высокоуровневый язык программирования — язык программирования, разработанный для быстроты и удобства использования программистом. Основная черта высокоуровневых языков — это абстракция, то есть введение смысловых конструкций, кратко описывающих такие структуры данных и операции над ними, описания которых на машинном коде (или другом низкоуровневом языке программирования) очень длинны и сложны для понимания. \nЯзык общего назначения применим к широкому спектру областей и не учитывает особенности конкретных сфер знаний.\nДинамическая типизация — приём, используемый в языках программирования и языках спецификации, при котором переменная связывается с типом в момент присваивания значения, а не в момент объявления переменной. Таким образом, в различных участках программы одна и та же переменная может принимать значения разных типов.\nДинамическая типизация упрощает написание программ для работы с меняющимся окружением, при работе с данными переменных типов; при этом отсутствие информации о типе на этапе компиляции повышает вероятность ошибок в исполняемых модулях.\nСильная / слабая типизация (также иногда говорят строгая / нестрогая). Сильная типизация выделяется тем, что язык не позволяет смешивать в выражениях различные типы и не выполняет автоматические неявные преобразования, например нельзя вычесть из строки множество. Языки со слабой типизацией выполняют множество неявных преобразований автоматически, даже если может произойти потеря точности или преобразование неоднозначно."
  }
},
{
  "model": "courses.text",
  "pk": 2,
  "fields": {
    "owner": 3,
    "title": "Data",
    "created": "2021-06-07T22:30:02.089Z",
    "updated": "2021-06-07T22:30:02.089Z",
    "content": "Immutable (неизменяемые): int, float, complex, bool, string, tuple, frozenset, None\nMutable (изменяемые): list, set, dict\nКлючи у dict — immutable, т.е int, float, complex, bool, string, tuple, frozenset\nНе рекомендуется использовать изменяемые типы как аргументы функций\nЕсли же используете, то желательно сделать безопасную копию этого объекта"  
  }
},
{
  "model": "courses.video",
  "pk": 1,
  "fields": {
    "owner": 3,
    "title": "Video",
    "created": "2022-05-23T22:33:32.093Z",
    "updated": "2022-05-23T22:33:32.093Z",
    "content": "https://www.youtube.com/watch?v=34Rp6KVGIEM&feature=emb_imp_woyt"
  }
},
{
  "model": "courses.video",
  "pk": 2,
  "fields": {
    "owner": 3,
    "title": "Video",
    "created": "2022-05-23T22:37:56.082Z",
    "updated": "2022-05-23T22:37:56.082Z",
    "content": "https://www.youtube.com/watch?v=bpASbXwjSp4&feature=emb_imp_woyt"
  }
},
{
  "model": "courses.video",
  "pk": 3,
  "fields": {
    "owner": 3,
    "title": "Video",
    "created": "2022-05-23T22:40:02.053Z",
    "updated": "2022-05-23T22:40:02.053Z",
    "content": "https://www.youtube.com/watch?v=NUrEyTW4JuU&feature=emb_imp_woyt"
  }
}
]
